/*!CK:314255877!*//*1435062895,*/

if (self.CavalryLogger) { CavalryLogger.start_js(["d1mnE"]); }

__d("ReactComposerStatusLazyAttachmentTextarea.react",["ReactComposerContextMixin","ReactComposerStatusActions","ComposedInlineStyle","DocumentModifier","EditorChangeType","EditorState","ReactComponentWithPureRenderMixin","React","ReactInputSelection","SelectionState","TextAreaControl","cx","joinClasses"],function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){b.__markCompiled&&b.__markCompiled();'use strict';var t=n,u=t.PropTypes,v=n.createClass({displayName:"ReactComposerStatusLazyAttachmentTextarea",_control:(null),mixins:[m,g],propTypes:{editorState:u.instanceOf(l).isRequired,expanded:u.bool,onFocus:u.func.isRequired,placeholder:u.string.isRequired},componentDidMount:function(){var w=n.findDOMNode(this.refs.textarea),x=new q(w);x.setAutogrow(true);x.onupdate();this._control=x;},componentDidUpdate:function(){this._control&&this._control.onupdate();},componentWillUnmount:function(){this._control=null;this._onUnmount();},render:function(){return (n.createElement("div",{className:s(this.props.className,"_4h96")},n.createElement("textarea",{className:"_4h98",ref:"textarea",placeholder:this.props.placeholder,onFocus:this.props.onFocus})));},_onUnmount:function(){var w=this.props.editorState,x=w.getCurrentContent().getBlockMap().first(),y=x.getKey(),z=n.findDOMNode(this.refs.textarea),aa=new p({anchorKey:y,anchorOffset:0,focusKey:y,focusOffset:x.getText().length,isBackward:false}),ba=j.replaceText(w.getCurrentContent(),aa,z.value,i.NONE,null),ca=l.push(w,ba,k.INSERT_FRAGMENT),da=o.getSelection(n.findDOMNode(this.refs.textarea));ca=l.acceptSelection(ca,new p({anchorKey:y,anchorOffset:da.start,focusKey:y,focusOffset:da.end,isBackward:false}));h.setEditorState(this.context.composerID,ca);}});e.exports=v;},null);